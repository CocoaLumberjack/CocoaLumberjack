name: Unit Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  LC_CTYPE: en_US.UTF-8
  LANG: en_US.UTF-8

jobs:
  swiftpm:
    runs-on: macos-11
    steps:
      - uses: maxim-lobanov/setup-xcode@v1.4.1
        with:
          xcode-version: ^13.0
      - uses: actions/checkout@v2
      - name: Run SwiftPM Tests
        run: swift test --enable-code-coverage --parallel
      - uses: sersoft-gmbh/swift-coverage-action@v2
        id: coverage-files
        with:
          format: lcov
      - uses: codecov/codecov-action@v2.1.0
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          files: ${{join(fromJSON(steps.coverage-files.outputs.files), ',')}}

  xcode:
    runs-on: macos-11
    strategy:
      matrix:
        scheme: [Swift Tests]
        destination:
          - platform=macOS
          - platform=iOS Simulator,OS=latest,name=iPhone 12 Pro
        skip-testing: ['']
        include:
          - scheme: iOS Tests
            destination: 'platform=iOS Simulator,name=iPhone 12 Pro,OS=latest'
            skip-testing: 'iOS Tests/DDFileLoggerPerformanceTests'
          - scheme: OS X Tests
            destination: 'platform=macosx'
            skip-testing: 'OS X Tests/DDFileLoggerPerformanceTests'
    steps:
      - uses: maxim-lobanov/setup-xcode@v1.4.1
        with:
          xcode-version: ^13.0
      - uses: actions/checkout@v2
      - uses: sersoft-gmbh/xcodebuild-action@v1
        with:
          project: Tests/Tests.xcodeproj
          scheme: ${{matrix.scheme}}
          destination: ${{matrix.destination}}
          skip-testing: ${{matrix.skip-testing}}
          enable-code-coverage: true
          parallel-testing-enabled: true
          build-settings: GCC_GENERATE_TEST_COVERAGE_FILES=YES
          action: test
      - uses: sersoft-gmbh/swift-coverage-action@v2
        id: coverage-files
        with:
          format: lcov
      - uses: codecov/codecov-action@v2.1.0
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          files: ${{join(fromJSON(steps.coverage-files.outputs.files), ',')}}
