name: Library Builds

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  LC_CTYPE: en_US.UTF-8
  LANG: en_US.UTF-8

jobs:
  static-lib:
    runs-on: macos-15
    strategy:
      matrix:
        sdk: [iphonesimulator, macosx]
    steps:
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ^16.4
      - name: Install Platform
        if: ${{ matrix.sdk == 'iphonesimulator' }}
        run: |
          xcrun simctl delete unavailable # Remove unavailable sims - also boots the simulator
          xcodebuild -downloadPlatform iOS
      - uses: actions/checkout@v5
      - uses: sersoft-gmbh/xcodebuild-action@v3
        with:
          workspace: Xcode/Lumberjack.xcworkspace
          scheme: CocoaLumberjack-Static
          configuration: Release
          sdk: ${{ matrix.sdk }}
          action: build

  dynamic-lib:
    runs-on: macos-15
    strategy:
      matrix:
        scheme: [CocoaLumberjack, CocoaLumberjackSwift]
        sdk: [iphonesimulator, macosx, watchsimulator, appletvsimulator]
    steps:
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ^16.4
      - name: Install Platform
        if: ${{ matrix.sdk != 'macosx' }}
        env:
          MATRIX_SDK: ${{ matrix.sdk }}
        run: |
          xcrun simctl delete unavailable # Remove unavailable sims - also boots the simulator
          case "${MATRIX_SDK}" in
            iphonesimulator)
              xcodebuild -downloadPlatform iOS
              ;;
            watchsimulator)
              xcodebuild -downloadPlatform watchOS
              ;;
            appletvsimulator)
              xcodebuild -downloadPlatform tvOS
              ;;
          esac
      - uses: actions/checkout@v5
      - uses: sersoft-gmbh/xcodebuild-action@v3
        with:
          workspace: Xcode/Lumberjack.xcworkspace
          scheme: ${{ matrix.scheme }}
          configuration: Release
          sdk: ${{ matrix.sdk }}
          action: build
